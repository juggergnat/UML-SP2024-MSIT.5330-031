pipeline {
  agent {
    kubernetes {
      // Define the pod template with container template
      containerTemplate {
        name 'gradle'
        image 'gradle'
        command 'sleep'
        args '30d'
      }
    }
  }
  
  stages {
    stage('Checkout code and prepare environment') {
      steps {
        git url: 'https://github.com/juggergnat/Continuous-Delivery-with-Docker-and-Jenkins-Second-Edition.git', branch: 'w7'
        sh """
          cd Chapter08/sample1
          chmod +x gradlew
        """
      }
    }

    // From assignment: All other tests should run in the feature and playground branches.
    stage('Run pipeline against a gradle project - test OTHER - Code check') {
      when {
        anyOf {
          branch 'feature'
          branch 'playground'
          branch 'main' // just to test.
        }
      }
      steps {
        echo 'Unit test and static code analysis on non-main branch.'
        sh """
          cd Chapter08/sample1; 
          ./gradlew test
          ./gradlew checkstyleMain
        """
      }
    }

    // From assignment: The CodeCoverage test should only run on the main branch.
    stage('Run pipeline against a gradle project - test MAIN - Code coverage') {
      when { branch 'main' }
      steps {
        echo 'Code coverage test on main branch.'
        sh """
          cd Chapter08/sample1;
          ./gradlew jacocoTestReport
          ./gradlew jacocoTestCoverageVerification
        """
      }
    }
  }

  post {
    always   {
      script {
        if ( env.BRANCH_NAME == 'main' ) {
          // Code coverage test report.
          publishHTML (target: [
            reportDir: 'Chapter08/sample1/build/reports/tests/test',
            reportFiles: 'index.html',
            reportName: "JaCoCo CC Report"
          ])
        }
        if (env.BRANCH_NAME == 'feature' || env.BRANCH_NAME == 'playground') {
          // Status code analysis test report.
          publishHTML (target: [
            reportDir: 'Chapter08/sample1/build/reports/checkstyle',
            reportFiles: 'main.html',
            reportName: "JaCoCo Checkstyle"
          ])
        }
      }
      echo 'End: pipeline completed, yo!'
    }
    success  { echo 'End: tests pass!' }
    failure  { echo 'End: tests fail!' }
    unstable { echo 'End: run is unstable!' }
    changed  { echo 'End: pipeline run changed!' }
  }
}
